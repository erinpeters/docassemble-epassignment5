---
modules:
  - docassemble.base.core
  - docassemble.base.util
  - .LAAIndividual
---
objects:
  - client: LAAIndividual.using(complete_attribute="complete")
  - family: DAList.using(object_type=LAAIndividual, complete_attribute="complete")
---
code:  |
  client.name.first
  client.annual_income.value
  client.monthly_income.value
  client.assets.value
  client.complete = True
---
code:  |
  family[i].name.first
  family[i].annual_income.value
  family[i].monthly_income.value
  family[i].assets.value
  family[i].complete = True
---
mandatory: True
code:  |
  # Interview flow block.
  client.complete
  family.gather()
  results
---
question:  |
  What is your name?
fields: 
  - First Name: client.name.first
  - Last Name: client.name.last
---
question:  |
  What is your annual income?
fields: 
  - Income: client.annual_income.value
    datatype: currency
    min: 0
---
question:  |
  What is your monthly income?
fields: 
  - Monthly Income: client.monthly_income.value
    datatype: currency
    min: 0
---
question:  |
  What is the total value of your assets?
fields: 
  - Value of Assets: client.assets.value
    datatype: currency
    min: 0
---
question: Do you have any family members, ${ client.name.first }?
yesno: family.there_are_any
---  
question: What is the name of your ${ ordinal(i) } family member?
fields:
  - First Name: family[i].name.first
  - Last Name: family[i].name.last
---
question: Can you please provide some more information about ${ family[i].name }?
fields:
  - Annual Income: family[i].annual_income.value
    datatype: currency
    min: 0
  - Monthly Income: family[i].monthly_income.value
    datatype: currency
    min: 0
  - Value of Assets: family[i].assets.value
    datatype: currency
    min: 0
---
question: Do you have any other family members?
yesno: family.there_is_another
---
question:  |
  Do you already have a lawyer?
yesno: has_lawyer
---
if:  |
  has_lawyer == True
question:  |
  Is your lawyer still acting on your behalf?
yesno: active_lawyer
---
if:  |
  has_lawyer == False
question:  |
  Can you afford a lawyer?
noyes: cant_afford_lawyer
---
question:  |  
  Is your legal matter located in Alberta?
yesno: matter_in_alberta
---
question:  |  
  Is this legal matter a family law matter?
yesno: is_family_matter
---
question:  |  
  Is this legal matter a criminal law matter?
yesno: is_criminal_matter
---
question:  |  
  Do you live in Alberta?
noyes: not_in_alberta
---
question:  |  
  Is this an appeal of a matter for which you have received LAA assistance?
yesno: is_appeal
---
code:  |
  if has_lawyer == False:
    active_lawyer = False
  if active_lawyer:
    cant_afford_lawyer = False
  if is_criminal_matter or is_family_matter:
    eligible_matter = True

  if (client.annual_income.value < 10000) and (client.monthly_income.value < 500) and (client.assets.value < 1000):
    financially_eligible = True
  else:
    financially_eligible = False
    
  if (client.annual_income.value > 20000) or (client.monthly_income.value > 1500) or (client.assets.value > 10000):
    financially_ineligible = True
  else:
    financially_ineligible = False
    
  if not financially_eligible and not financially_ineligible:
    financially_eligible_marginally = True
  else:
    financially_eligible_marginally = False
    
  if financially_eligible and not active_lawyer and eligible_matter and not is_appeal and not not_in_alberta:
    eligible = True
  else:
    eligible = False
    
  if financially_eligible_marginally and not active_lawyer and eligible_matter and not is_appeal and not not_in_alberta:
    marginally_eligible = True
  else:
    marginally_eligible = False
    
  if financially_ineligible or active_lawyer or not eligible_matter or is_appeal or not_in_alberta:
    not_eligible = True
  else:
    not_eligible = False
---
event: results
question: Thank you, ${ client }.
subquestion:  |
  Here is your document.
attachment: 
  name: Legal Aid Services Application
  filename: Legal_Aid_Application
  docx template file: legal_aid_template3.docx
  valid formats:
    - pdf
    - docx
buttons:
  - Exit: exit
---